# Storing Values
y=5
z=-6

for(x in y:z){        # x in 5:-6
  print(10+5)
}
------------------
fruits <- list("apple", "banana", "cherry")

for (x in fruits) {
  print(x)
}

OUTPUT: 
[1] "apple"
[1] "banana"
[1] "cherry"

----------------

dice <- c(1, 2, 3, 4, 5, 6)

for (x in dice) {
  print(x)
}

OUTPUT:
[1] 1
[1] 2
[1] 3
[1] 4
[1] 5
[1] 6

----------------
# break

fruits <- list("apple", "banana", "cherry")

for (x in fruits) {
  if (x == "cherry") {
    break
  }
  print(x)
}

OUTPUT: 
"apple"
"banana"

----------------
# next (skip)

fruits <- list("apple", "banana", "cherry")

for (x in fruits) {
  if (x == "banana") {
    next
  }
  print(x)
}

OUTPUT;
"apple"
"cherry"

----------------
7 %% 5 = 2

15 %/% 4 = 3      (15/4 = 3.75 so the nearest whole number is 3)

# the integer divison (%/%) rounds the result down to the nearest whole number

------------------------------------------------------------------------------------------------------------------

# Storing text

n <- "hh"
n = "h"
n
print(n)

# String

strr <- "Lorem ipsum dolor sit amet,
consectetur adipiscing elit,
sed do eiusmod tempor incididunt
ut labore et dolore magna aliqua."

cat(strr)                              cat() is used to break lines in ouput, or direct name of the string that is " strr " will print the string in a single line

OUTPUT :-
Lorem ipsum dolor sit amet,
consectetur adipiscing elit,
sed do eiusmod tempor incididunt
ut labore et dolore magna aliqua.



# Length of the string

str <- "Hello World!"

nchar(str)

------------------------------------------------------------------------------------------------------------------

#Joining the Line
paste("hello",5+15,"20")

num = 500
t = "i have "
l = " Rs"

paste(t,num,l)

------------------------------------------------------------------------------------------------------------------

max(6,8,5,1)          OUTPUT = 8
min(7,3,4,9)          OUTPUT = 3

------------------------------------------------------------------------------------------------------------------

# Boolean

10 > 9    # TRUE 
10 == 9   # FALSE 
10 < 9    # FALSE

a <- 10
b <- 9

a > b     # TRUE

a <- 200
b <- 33

if (b > a) {
  print ("b is greater than a")
} else {
  print("b is not greater than a")
}

------------------------------------------------------------------------------------------------------------------
